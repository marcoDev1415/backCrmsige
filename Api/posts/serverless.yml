service: token-facebook

plugins:
  - serverless-import-apigateway

custom:
  timezone: 'America/Mexico_City'
  stage: ${sls:stage}
  environment:
    dev:
      accountId: '590183955517'
      restApiId: wq5e58sevb # REST API resource ID. Default is generated by the framework 
      restApiRootResourceId: 2r977p # Root resource ID, represent as / path 

provider:
  name: aws
  runtime: python3.9
  stage: ${opt:stage}
  region: us-east-1
  apiGateway:
    restApiId: ${self:custom.environment.${self:custom.stage}.restApiId}
    restApiRootResourceId: ${self:custom.environment.${self:custom.stage}.restApiRootResourceId}

functions:
  commentPost:
    handler: handler.coment_id_post
    timeout: 30
    memorySize: 512
    events:
      - http:
          path: /post_id
          method: get
          cors:
            # origin: '*'
            allowCredentials: false

    environment:
      STAGE: ${self:provider.stage}
    layers:
      - arn:aws:lambda:us-east-1:590183955517:layer:dev-Sinergia-crm-layer:6     
  
  fullPosts:
    handler: handler.full_post
    timeout: 30
    memorySize: 512
    events:
      - http:
          path: /full_post
          method: get
          cors:
            # origin: '*'
            allowCredentials: false
          request:
            parameters:
              querystrings:
                page_id: true
               
  

    environment:
      STAGE: ${self:provider.stage}
    layers:
      - arn:aws:lambda:us-east-1:590183955517:layer:dev-Sinergia-crm-layer:6    

  reactionPost:
    handler: handler.raction_post
    timeout: 30
    memorySize: 512
    events:
      - http:
          path: /reaction_post
          method: get
          cors:
            # origin: '*'
            allowCredentials: false
          request:
            parameters:
              querystrings:
                page_id: true
    environment:
      STAGE: ${self:provider.stage}
    layers:
      - arn:aws:lambda:us-east-1:590183955517:layer:dev-Sinergia-crm-layer:6 


#Roles
resources:
  Resources:
    userRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /giro/api/${self:custom.stage}/
        RoleName: ${self:custom.stage}-${self:service}-role
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${self:custom.stage}-${self:service}-policy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "dynamodb:PutItem"
                    - "dynamodb:BatchWriteItem"
                    - "dynamodb:BatchGetItem"
                    - "dynamodb:GetItem"
                    - "dynamodb:Scan"
                    - "dynamodb:Query"
                    - "dynamodb:UpdateItem"
                    - "dynamodb:DeleteItem"
                    - "logs:CreateLogStream"
                    - "logs:PutLogEvents"
                    - "lambda:InvokeFunction"
                    - "lambda:InvokeAsync"
                    - "lambda:AWSLambdaBasicExecutionRole"
                    - "dynamodb:GetRecords"
                    - "dynamodb:GetShardIterator"
                    - "dynamodb:DescribeStream"
                    - "dynamodb:ListStreams"
                    - "s3:ListBucket"
                    - "s3:GetObject"
                    - "s3:PutObject"
                    - "sts:AssumeRole"
                    - "sts:GetAccessKeyInfo"
                    - "ec2:CreateNetworkInterface"
                    - "ec2:DescribeNetworkInterfaces"
                    - "ec2:DeleteNetworkInterface"
                    - "ec2:DescribeSecurityGroups"
                    - "ec2:DescribeSubnets"
                    - "ec2:DescribeVpcs"
                    - "secretsmanager:*"
                  Resource: "*"